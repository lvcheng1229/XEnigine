// TTT2017.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

// Test.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>

class A
{
public:
	~A()
	{
		std::cout << "~" << std::endl;
	}
};
void function1(const A& a)
{

}
void function2(A* a)
{
}
int main()
{
	A a = A(); //a 的生命周期
	std::cout << "1" << std::endl;
	std::cout << "1" << std::endl;
	A* b = &A(); //立刻释放
	std::cout << "2" << std::endl;
	std::cout << "2" << std::endl;
	function1(A()); //这个是整个函数生命周期
	std::cout << "3" << std::endl;
	std::cout << "3" << std::endl;
	{

	function2(&A()); //这个也是么？？？
	}
	std::cout << "4" << std::endl;
	std::cout << "4" << std::endl;
	
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
